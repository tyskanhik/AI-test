import React, { useEffect, useState, useRef } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { Button } from '../../ui-kit/Button/Button';
import { Text } from '../../ui-kit/Text/Text';
import { Loader } from '../../ui-kit/Loader/Loader';
import styles from './ReportStatusPage.module.scss';
import { checkReportStatus } from '../../api/Api';

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const MOCK_DATA = {
  name: "–ê–ª–µ–∫—Å–µ–π",
  houseQuality: "–ß—É–≤—Å—Ç–≤–æ –∑–∞—â–∏—â—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏",
  animalTrait: "–í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
  selfPortrait: "–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –æ–¥–æ–±—Ä–µ–Ω–∏—é –≤–∑—Ä–æ—Å–ª—ã—Ö",
  details: {
    house: "–£—é—Ç–Ω—ã–π, —Å –æ–∫–Ω–∞–º–∏, –¥—ã–º–æ–º, –∑–∞–±–æ—Ä–æ–º",
    tree: "–° –∫–æ—Ä–Ω—è–º–∏, –ø—ã—à–Ω–∞—è –∫—Ä–æ–Ω–∞",
    person: "–ú–∞–ª–µ–Ω—å–∫–∏–π, —Ä—É–∫–∏ –ø—Ä–∏–∂–∞—Ç—ã, –±–µ–∑ —ç–º–æ—Ü–∏–π",
    animal: "–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–æ–µ –∏–ª–∏ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–∏—Å–∞ —Å –∫—Ä—ã–ª—å—è–º–∏)",
    portrait: "–ú–∞–ª–µ–Ω—å–∫–∏–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –∑–∞–Ω–∏–∂–µ–Ω–Ω–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞"
  },
  scores: {
    emotionalStability: 14,
    socialAdaptation: 16,
    selfRegulation: 12,
    communicativeness: 18,
    selfEsteem: 11
  }
};

export const ReportStatusPage: React.FC = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const [status, setStatus] = useState<'processing' | 'ready' | 'error'>('processing');
  const [error, setError] = useState<string | null>(null);
  const [pdfUrl, setPdfUrl] = useState<string | null>(null);
  const [usingMockData, setUsingMockData] = useState(false);
  const taskId = location.state?.taskId;

  const timeoutRef = useRef<NodeJS.Timeout | null>(null);
  const intervalRef = useRef<NodeJS.Timeout | null>(null);

  const clearAllTimers = () => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = null;
    }
    if (intervalRef.current) {
      clearInterval(intervalRef.current);
      intervalRef.current = null;
    }
  };

  useEffect(() => {
    if (!taskId) {
      navigate('/');
      return;
    }

    const switchToMockData = () => {
      clearAllTimers();
      setUsingMockData(true);
      setStatus('ready');
      setError('–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–æ–∫–∞–∑–∞–Ω—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    };

    // –¢–∞–π–º–µ—Ä –¥–ª—è –º–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)
    timeoutRef.current = setTimeout(switchToMockData, 30000);

    const checkStatus = async () => {
      try {
        const response = await checkReportStatus(taskId);
        
        if (response.status === 'ready') {
          clearAllTimers();
          setStatus('ready');
          setPdfUrl(response.pdf_url);
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', err);
      }
    };

    checkStatus();
    
    intervalRef.current = setInterval(checkStatus, 15000);

    return () => {
      clearAllTimers();
    };
  }, [taskId, navigate]);

  const handleDownloadPdf = () => {
    if (pdfUrl) {
      const link = document.createElement('a');
      link.href = pdfUrl;
      link.download = 'report.pdf';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } else if (usingMockData) {
      alert('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: PDF –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      alert('PDF –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤');
    }
  };

  if (!taskId) {
    return (
      <div className={styles.container}>
        <Text variant="h2">–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏</Text>
        <Button text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é" onClick={() => navigate('/')} />
      </div>
    );
  }

  if (status === 'processing') {
    return (
      <div className={styles.container}>
        <Text variant="h2">–ê–Ω–∞–ª–∏–∑ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...</Text>
        <Text>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ú—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –≥–æ—Ç–æ–≤–∏–º –æ—Ç—á–µ—Ç.</Text>
        <Loader size={100} />
      </div>
    );
  }

  // –ö–æ–Ω—Ç–µ–Ω—Ç, –∫–æ–≥–¥–∞ –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ (—Ä–µ–∞–ª—å–Ω—ã–µ –∏–ª–∏ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
  const data = usingMockData ? MOCK_DATA : location.state?.reportData || MOCK_DATA;

  return (
    <div className={styles.container} style={{ alignItems: 'flex-start', height: 'auto', padding: '40px' }}>
      {error && (
        <div style={{ color: 'red', marginBottom: '20px' }}>
          <Text>{error}</Text>
        </div>
      )}
      <Text variant="h2">üìö –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞</Text>
      
      <ul style={{ textAlign: 'left', marginBottom: '30px' }}>
        <li><strong>–ò–º—è —Ä–µ–±—ë–Ω–∫–∞:</strong> {data.name}</li>
        <li><strong>–ì–ª–∞–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (—Ä–∏—Å—É–Ω–æ–∫ "–î–æ–º"):</strong> {data.houseQuality}</li>
        <li><strong>–û—Å–Ω–æ–≤–Ω–∞—è —á–µ—Ä—Ç–∞ (—Ä–∏—Å—É–Ω–æ–∫ "–ñ–∏–≤–æ—Ç–Ω–æ–µ"):</strong> {data.animalTrait}</li>
        <li><strong>–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞ (–∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç):</strong> {data.selfPortrait}</li>
      </ul>

      <hr style={{ width: '100%', margin: '20px 0' }} />

      <Text variant="h2">üîç –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ —Ä–∞–∑–¥–µ–ª—ã</Text>

      <Text variant="h3">1. –î–æ–º-–î–µ—Ä–µ–≤–æ-–ß–µ–ª–æ–≤–µ–∫: –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è</Text>
      
      <table style={{ width: '100%', marginBottom: '30px', borderCollapse: 'collapse' }}>
        <thead>
          <tr style={{ backgroundColor: '#f5f5f5' }}>
            <th style={{ padding: '10px', border: '1px solid #ddd' }}>–≠–ª–µ–º–µ–Ω—Ç</th>
            <th style={{ padding: '10px', border: '1px solid #ddd' }}>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∏—Å—É–Ω–∫–∞</th>
            <th style={{ padding: '10px', border: '1px solid #ddd' }}>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–î–æ–º</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.details.house}</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —Å–µ–º—å—è –≤–∞–∂–Ω–∞</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–î–µ—Ä–µ–≤–æ</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.details.tree}</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å, —Ä–æ—Å—Ç, –∂–∏–∑–Ω–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–ß–µ–ª–æ–≤–µ–∫</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.details.person}</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–°–∫—Ä–æ–º–Ω–æ—Å—Ç—å, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ—Å—Ç—å</td>
          </tr>
        </tbody>
      </table>
      
      <Text style={{ marginBottom: '30px', textAlign: 'left' }}>
        <strong>–û–±—â–∏–π –≤—ã–≤–æ–¥:</strong> –†–µ–±—ë–Ω–æ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –≤ —Å–µ–º—å–µ –∑–∞—â–∏—â—ë–Ω–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–¥–µ—Ä–∂–∞–Ω –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ —ç–º–æ—Ü–∏–π –∏ —á—É–≤—Å—Ç–≤—É–µ—Ç –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ.
      </Text>

      <Text variant="h3">2. –ñ–∏–≤–æ—Ç–Ω–æ–µ: –¥–µ—Ç–∞–ª–∏ –∏ —Ñ–∞–Ω—Ç–∞–∑–∏—è</Text>
      
      <ul style={{ textAlign: 'left', marginBottom: '30px' }}>
        <li><strong>–í—ã–±–æ—Ä –∂–∏–≤–æ—Ç–Ω–æ–≥–æ:</strong> {data.details.animal}</li>
        <li><strong>–ê–∫—Ü–µ–Ω—Ç—ã –≤ —Ä–∏—Å—É–Ω–∫–µ:</strong> –ë–æ–ª—å—à–∏–µ –≥–ª–∞–∑–∞, —É—à–∏ ‚Äî –≤–∞–∂–Ω–æ—Å—Ç—å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è, –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å</li>
        <li><strong>–ü–æ–∑—ã –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:</strong> –ú–∏—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Å–∏–¥—è—á–∞—è –ø–æ–∑–∞ ‚Äî –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
      </ul>
      
      <Text style={{ marginBottom: '30px', textAlign: 'left' }}>
        <strong>–í—ã–≤–æ–¥:</strong> –£ —Ä–µ–±—ë–Ω–∫–∞ —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–≤–∏—Ç–æ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ–Ω —Å–∫–ª–æ–Ω–µ–Ω –∫ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –∏ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ú–æ–∂–µ—Ç —Å–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—è –∞–Ω–∞–ª–∏–∑.
      </Text>

      <Text variant="h3">3. –ê–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç: –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∞–º–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏—è</Text>
      
      <ul style={{ textAlign: 'left', marginBottom: '30px' }}>
        <li><strong>–†–∞–∑–º–µ—Ä —Ñ–∏–≥—É—Ä—ã:</strong> {data.details.portrait}</li>
        <li><strong>–í—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü–∞:</strong> –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ—Å—Ç—å</li>
        <li><strong>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏:</strong> –ù–µ—Ç —Ñ–æ–Ω–∞ –∏–ª–∏ –≤—Ç–æ—Ä–∏—á–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ ‚Äî –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–æ—Ü–∏—É–º–µ</li>
      </ul>
      
      <Text style={{ marginBottom: '30px', textAlign: 'left' }}>
        <strong>–í—ã–≤–æ–¥:</strong> –†–µ–±—ë–Ω–æ–∫ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤–Ω–µ—à–Ω—é—é –æ—Ü–µ–Ω–∫—É, –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –æ—Å–æ–±–µ–Ω–Ω–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏ —Å–ª–æ–≤–µ—Å–Ω–æ–π.
      </Text>

      <Text variant="h3">4. –û–ø—Ä–æ—Å–Ω–∏–∫: —Å—É–º–º–∞—Ä–Ω—ã–µ –±–∞–ª–ª—ã –∏ –ø—Ä–æ—Ñ–∏–ª—å</Text>
      
      <table style={{ width: '100%', marginBottom: '30px', borderCollapse: 'collapse' }}>
        <thead>
          <tr style={{ backgroundColor: '#f5f5f5' }}>
            <th style={{ padding: '10px', border: '1px solid #ddd' }}>–®–∫–∞–ª–∞</th>
            <th style={{ padding: '10px', border: '1px solid #ddd' }}>–ë–∞–ª–ª—ã (–∏–∑ 25)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.scores.emotionalStability}</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.scores.socialAdaptation}</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–°–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏—è</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.scores.selfRegulation}</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–æ—Å—Ç—å</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.scores.communicativeness}</td>
          </tr>
          <tr>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞</td>
            <td style={{ padding: '10px', border: '1px solid #ddd' }}>{data.scores.selfEsteem}</td>
          </tr>
        </tbody>
      </table>
      
      <Text variant="h3">–í–∏–∑—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å</Text>
      <pre style={{ 
        backgroundColor: '#f5f5f5', 
        padding: '15px', 
        borderRadius: '5px',
        textAlign: 'left',
        marginBottom: '30px'
      }}>
        –≠–º–æ—Ü. —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å  [{renderScoreBar(data.scores.emotionalStability)}]\n
        –°–æ—Ü. –∞–¥–∞–ø—Ç–∞—Ü–∏—è      [{renderScoreBar(data.scores.socialAdaptation)}]\n
        –°–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏—è       [{renderScoreBar(data.scores.selfRegulation)}]\n
        –ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–æ—Å—Ç—å   [{renderScoreBar(data.scores.communicativeness)}]\n
        –°–∞–º–æ–æ—Ü–µ–Ω–∫–∞          [{renderScoreBar(data.scores.selfEsteem)}]
      </pre>

      <hr style={{ width: '100%', margin: '20px 0' }} />

      <Text variant="h2">üìñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π</Text>
      
      <ul style={{ textAlign: 'left', marginBottom: '30px' }}>
        <li>–ß–∞—â–µ —Ö–≤–∞–ª–∏—Ç–µ —Ä–µ–±—ë–Ω–∫–∞ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
        <li>–ü–æ–º–æ–≥–∞–π—Ç–µ –Ω–∞–∑—ã–≤–∞—Ç—å —á—É–≤—Å—Ç–≤–∞: "–¢—ã —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ..."</li>
        <li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ä–µ–±—ë–Ω–æ–∫ –æ—à–∏–±–∞–µ—Ç—Å—è</li>
        <li>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω—É—é –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–º–∞</li>
        <li>–ü–æ–æ—â—Ä—è–π—Ç–µ —Ñ–∞–Ω—Ç–∞–∑–∏—é ‚Äî —Å–∫–∞–∑–∫–∏, —Ä–∏—Å—É–Ω–∫–∏, –∏–≥—Ä—ã –ø–æ —Ä–æ–ª—è–º</li>
      </ul>

      <hr style={{ width: '100%', margin: '20px 0' }} />

      <Text style={{ fontStyle: 'italic' }}>
        –û—Ç—á—ë—Ç —Å–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–µ–∫—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π. –Ø–≤–ª—è–µ—Ç—Å—è –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–º –¥–ª—è –º—è–≥–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–µ–±—ë–Ω–∫–∞ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏.
      </Text>

      <div className={styles.buttons}>
        <Button 
          text="–°–∫–∞—á–∞—Ç—å PDF" 
          onClick={handleDownloadPdf}
          color="primary"
          disabled={!pdfUrl && !usingMockData}
          width='400px'
        />
        <Button 
          text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" 
          onClick={() => alert('–§—É–Ω–∫—Ü–∏—è "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ')}
          color="primary"
          width='400px'
        />
      </div>
      <Text> –®–∞–≥ 3/3 </Text>
    </div>
  );
};

function renderScoreBar(score: number): string {
  const filled = '‚ñ†'.repeat(Math.round(score / 5));
  const empty = '‚ñ°'.repeat(5 - Math.round(score / 5));
  return filled + empty;
}