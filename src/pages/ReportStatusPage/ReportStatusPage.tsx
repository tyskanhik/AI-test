import React, { useEffect, useState, useRef } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { Button } from '../../ui-kit/Button/Button';
import { Text } from '../../ui-kit/Text/Text';
import { Loader } from '../../ui-kit/Loader/Loader';
import { Notification } from '../../ui-kit/Notification/Notification';
import styles from './ReportStatusPage.module.scss';
import { checkReportStatus } from '../../mocks/mockApi';

export const ReportStatusPage: React.FC = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const [status, setStatus] = useState<'loading' | 'ready' | 'error'>('loading');
  const [error, setError] = useState<string | null>(null);
  const [reportData, setReportData] = useState<any>(null);
  const taskId = location.state?.taskId;

  const timeoutRef = useRef<NodeJS.Timeout | null>(null);

  const clearTimers = () => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = null;
    }
  };

  const fetchReportData = async () => {
    try {
      const response = await checkReportStatus(taskId);
      
      if (response.status === 'ready') {
        clearTimers();
        setStatus('ready');
        setReportData(response.report);
      }
    } catch (err) {
      handleLoadError();
    }
  };

  const handleLoadError = () => {
    clearTimers();
    setStatus('error');
    setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  };

  useEffect(() => {
    timeoutRef.current = setTimeout(handleLoadError, 30000);
    
    fetchReportData();

    return () => {
      clearTimers();
    };
  }, []);

  const handleRetry = () => {
    setStatus('loading');
    setError(null);
  };

  const renderScoreBar = (score: number) => {
    const filled = '‚ñ†'.repeat(Math.round(score / 5));
    const empty = '‚ñ°'.repeat(5 - Math.round(score / 5));
    return filled + empty;
  };

  if (!taskId) {
    return (
      <div className={styles.container}>
        <Text variant="h2">–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏</Text>
        <Button text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é" onClick={() => navigate('/')} />
      </div>
    );
  }

  if (status === 'loading') {
    return (
      <div className={styles.container}>
        <Text variant="h2">–ê–Ω–∞–ª–∏–∑ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...</Text>
        <Text>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ú—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –≥–æ—Ç–æ–≤–∏–º –æ—Ç—á–µ—Ç.</Text>
        <Loader size={100} />
      </div>
    );
  }

  if (status === 'error') {
    return (
      <div className={styles.container}>
        <Notification variant="error" width="50%">
          {error}
        </Notification>
        <div className={styles.buttons}>
          <Button 
            text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é" 
            onClick={() => navigate('/')} 
            color="primary"
          />
          <Button 
            text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞" 
            onClick={handleRetry}
            color="secondary"
          />
        </div>
      </div>
    );
  }

  if (!reportData) {
    return (
      <div className={styles.container}>
        <Text variant="h2">–î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</Text>
        <Button text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞" onClick={handleRetry} />
      </div>
    );
  }

  return (
    <div className={`${styles.container} ${styles.reportView}`}>
      <Text variant="h2">üìö –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞</Text>
      
      <ul className={styles.summaryList}>
        <li><strong>–ò–º—è —Ä–µ–±—ë–Ω–∫–∞:</strong> {reportData.childName}</li>
        <li><strong>–ì–ª–∞–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (—Ä–∏—Å—É–Ω–æ–∫ "–î–æ–º"):</strong> {reportData.mainQualities.house}</li>
        <li><strong>–û—Å–Ω–æ–≤–Ω–∞—è —á–µ—Ä—Ç–∞ (—Ä–∏—Å—É–Ω–æ–∫ "–ñ–∏–≤–æ—Ç–Ω–æ–µ"):</strong> {reportData.mainQualities.animal}</li>
        <li><strong>–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞ (–∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç):</strong> {reportData.mainQualities.portrait}</li>
      </ul>

      <hr className={styles.divider} />

      <Text variant="h2">üîç –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ —Ä–∞–∑–¥–µ–ª—ã</Text>

      <Text variant="h3">1. –î–æ–º-–î–µ—Ä–µ–≤–æ-–ß–µ–ª–æ–≤–µ–∫: –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è</Text>
      
      <Text className={styles.conclusionText}>
        <strong>–û–±—â–∏–π –≤—ã–≤–æ–¥:</strong> {reportData.detailedSections.houseTreePerson.generalConclusion}
      </Text>

      <Text variant="h3">2. –ñ–∏–≤–æ—Ç–Ω–æ–µ: –¥–µ—Ç–∞–ª–∏ –∏ —Ñ–∞–Ω—Ç–∞–∑–∏—è</Text>
      
      <Text className={styles.conclusionText}>
        <strong>–í—ã–≤–æ–¥:</strong> {reportData.detailedSections.animal.conclusion}
      </Text>

      <Text variant="h3">3. –ê–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç: –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∞–º–æ–≤–æ—Å–ø—Ä–∏—è—Ç–∏—è</Text>
      
      <Text className={styles.conclusionText}>
        <strong>–í—ã–≤–æ–¥:</strong> {reportData.detailedSections.selfPortrait.conclusion}
      </Text>

      <Text variant="h3" className={styles.subsectionTitle}>4. –û–ø—Ä–æ—Å–Ω–∏–∫: —Å—É–º–º–∞—Ä–Ω—ã–µ –±–∞–ª–ª—ã –∏ –ø—Ä–æ—Ñ–∏–ª—å</Text>
      
      <table className={styles.scoresTable}>
        <thead>
          <tr>
            <th>–®–∫–∞–ª–∞</th>
            <th>–ë–∞–ª–ª—ã (–∏–∑ 25)</th>
            <th>–ì—Ä–∞—Ñ–∏–∫</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å</td>
            <td>{reportData.scores.emotionalStability}</td>
            <td className={styles.scoreBar}>{renderScoreBar(reportData.scores.emotionalStability)}</td>
          </tr>
          <tr>
            <td>–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è</td>
            <td>{reportData.scores.socialAdaptation}</td>
            <td className={styles.scoreBar}>{renderScoreBar(reportData.scores.socialAdaptation)}</td>
          </tr>
          <tr>
            <td>–°–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏—è</td>
            <td>{reportData.scores.selfRegulation}</td>
            <td className={styles.scoreBar}>{renderScoreBar(reportData.scores.selfRegulation)}</td>
          </tr>
          <tr>
            <td>–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–æ—Å—Ç—å</td>
            <td>{reportData.scores.communication}</td>
            <td className={styles.scoreBar}>{renderScoreBar(reportData.scores.communication)}</td>
          </tr>
          <tr>
            <td>–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞</td>
            <td>{reportData.scores.selfEsteem}</td>
            <td className={styles.scoreBar}>{renderScoreBar(reportData.scores.selfEsteem)}</td>
          </tr>
        </tbody>
      </table>

      <hr className={styles.divider} />

      <Text variant="h2">üìñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π</Text>
      
      <ul className={styles.recommendationsList}>
        <li>–ß–∞—â–µ —Ö–≤–∞–ª–∏—Ç–µ —Ä–µ–±—ë–Ω–∫–∞ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
        <li>–ü–æ–º–æ–≥–∞–π—Ç–µ –Ω–∞–∑—ã–≤–∞—Ç—å —á—É–≤—Å—Ç–≤–∞: "–¢—ã —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ..."</li>
        <li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ä–µ–±—ë–Ω–æ–∫ –æ—à–∏–±–∞–µ—Ç—Å—è</li>
        <li>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω—É—é –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–º–∞</li>
        <li>–ü–æ–æ—â—Ä—è–π—Ç–µ —Ñ–∞–Ω—Ç–∞–∑–∏—é ‚Äî —Å–∫–∞–∑–∫–∏, —Ä–∏—Å—É–Ω–∫–∏, –∏–≥—Ä—ã –ø–æ —Ä–æ–ª—è–º</li>
      </ul>

      <div className={styles.buttons}>
        <Text>–®–∞–≥ 3/3</Text>
        <Button 
          text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é" 
          onClick={() => navigate('/')}
          color="primary"
        />
      </div>
    </div>
  );
};